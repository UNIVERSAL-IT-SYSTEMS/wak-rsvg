(function(w, $, a, m){		function filterEvent(e){		e.stopPropagation();		e.preventDefault();			return false;	}	    	$('body').on('dragover', filterEvent).css({		'-webkit-user-select':'none',		'-moz-user-select':'none',		'-ms-user-select':'none',		'-o-user-select':'none',		'user-select':'none'    });	window.URL = window.URL || window.webkitURL;	function afterFileUpload(e){		window.URL.revokeObjectURL($('#download').attr('href'));				var blob = new Blob([this.response], {type: 'application/pdf'});		var url = window.URL.createObjectURL(blob);				$('#download').attr({'href':url, 'target':'_blank'});		$('#download').fadeIn();	}		function uploadFile(url, fileData, cb){		var xhr = new XMLHttpRequest();				xhr.onreadystatechange = function(){			var state = this.readyState;			switch (state){				case 4:					var status = this.status;					switch(status){						case 200:								cb.call(this);							break;						case 404:							a.error('Request handler not found!');							break;							case 401:							a.error('Request handler not authorized!');							break;						default:							a.error('Error!');							break;							}						break;				case 3:						break;				case 2:						break;				case 1:						break;				case 0:						break;				}		}		xhr.open('POST', url);		//this will result in an Image instance in request handler,		//which gives fewer options to work with.		//xhr.setRequestHeader('Content-Type', 'image/svg+xml'); 		xhr.setRequestHeader('Content-Type', 'application/octet-stream');		xhr.responseType = 'blob';//otherwise new Blob([this.response]) won't work 		xhr.send(new Uint8Array(fileData));	}			$('body')[0].addEventListener('drop', function(e){		e.stopPropagation();		e.preventDefault();						if(window.FileReader){			var files = e.dataTransfer.files;			function readFile(files, i){				var file = files[i];				var reader = new FileReader();				reader.onload = function(e){					var fileData = e.target.result;					var file = this.file;					if((/.+\.svg/).test(file.name)){						a.log('File: ' + file.name);						uploadFile('rsvg/topdf', fileData, afterFileUpload);					}					if (i < files.length - 1) {			        readFile(files, i + 1);				    }										}//onload								reader.file = file;				reader.readAsArrayBuffer(file);			}			readFile(files, 0);		}//window.FileReader				}, false);													a.set({'delay':1500});    m.lang(navigator.language);	    		w.onAfterInit = function(){				//just cosmetic, no impact on performance		window.history.replaceState('Object', 'Title', '/');	};			})(WAF, jQuery, alertify, moment);